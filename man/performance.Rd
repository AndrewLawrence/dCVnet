% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_classperformance.R
\name{performance}
\alias{performance}
\alias{performance.default}
\alias{performance.dCVnet}
\alias{performance.performance}
\alias{performance.glm}
\alias{performance.glmlist}
\title{performance}
\usage{
performance(x, ...)

\method{performance}{default}(x, ...)

\method{performance}{dCVnet}(x, as.data.frame = TRUE, ...)

\method{performance}{performance}(x, as.data.frame = TRUE, ...)

\method{performance}{glm}(
  x,
  as.data.frame = TRUE,
  label = deparse(substitute(x)),
  threshold = 0.5,
  newdata = NULL,
  ...
)

\method{performance}{glmlist}(x, as.data.frame = TRUE, ...)
}
\arguments{
\item{x}{an object from which prediction performance can be extracted.}

\item{...}{arguments to pass on}

\item{as.data.frame}{return a data.frame instead of a list of
\code{\link{performance}} objects.}

\item{label}{specify a label for the output}

\item{threshold}{for binomial family glm - use specified threshold
for predicting class from probability.}

\item{newdata}{evaluate performance in new data}
}
\value{
a performance object, is a dataframe (or list of dataframes)
with the following columns:
\itemize{
\item{reference - the known 'true' class of the observation}
\item{prediction - the model prediction for a case.
for dCVnet this is the result of predict(model, type = "response")
With "binary" response predictions are the predicted probability
of the non-reference class (used for AUROC)}
\item{classification - for binomial and multinomial models this is
the predicted class assigned by the model}
\item{label - a grouping variable when predictions come from more than
one source, e.g. multiple reps}
}
}
\description{
extracts a standardised classification performance table for a model
or list of models.

Default function behaviour assumes input is a
\code{\link{dCVnet}} object (and fails if this is not reasonable).

Applying performance to a performance object
allows conversion between list/dataframe format.

For glm objects wraps \link{predict.glm} if newdata is specified.
}
