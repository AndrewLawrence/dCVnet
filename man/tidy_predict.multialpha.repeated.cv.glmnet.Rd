% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_utilities.R
\name{tidy_predict.multialpha.repeated.cv.glmnet}
\alias{tidy_predict.multialpha.repeated.cv.glmnet}
\title{tidy_predict.multialpha.repeated.cv.glmnet}
\usage{
tidy_predict.multialpha.repeated.cv.glmnet(
  mod,
  newx,
  s = NULL,
  alpha = NULL,
  newy = NULL,
  newoffset = NULL,
  label = "",
  binomial_thresh = 0.5,
  ...
)
}
\arguments{
\item{mod}{a fitted glmnet object (alpha is determined by the object)}

\item{newx}{new values of x for which predictions are desired.}

\item{s}{specfy a lambda, or leave NULL to use the optimal lambda
identified by \code{\link{multialpha.repeated.cv.glmnet}}.}

\item{alpha}{specify an alpha, or leave NULL to use the optimal alpha
identified by \code{\link{multialpha.repeated.cv.glmnet}}.}

\item{newy}{outcome associated with newx. If provided these will be included
in the output (useful for subsequent performance assessment).}

\item{newoffset}{if an offset is used in the fit, then one must be supplied
for making predictions.}

\item{label}{an optional label (value is added in column "label")}

\item{binomial_thresh}{this allows non-default thresholds to
be used for classification. This is only relevant for binary
classification. E.g. for an imbalanced binary outcome
with 70:30 allocation, setting the decision threshold to 0.7
gives a better balance of sensitivity and specificity
without requiring threshold tuning (as in AUC optimal threshold).}

\item{...}{passed to \code{\link{predict.glmnet}}}
}
\description{
return a dataframe of glmnet predictions associated with outcomes (when these
are provided). Standardises return over different model families.
}
