% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_main.R
\name{multialpha.repeated.cv.glmnet}
\alias{multialpha.repeated.cv.glmnet}
\title{multialpha.repeated.cv.glmnet}
\usage{
multialpha.repeated.cv.glmnet(alphalist, lambdas, y, k, nrep,
  opt.lambda.type = "minimum", opt.lambda.type.value = 1,
  opt.ystratify = T, opt.uniquefolds = F, ...)
}
\arguments{
\item{alphalist}{a vector of alpha values to search.}

\item{lambdas}{use a fixed, user supplied lambda sequence (descending)
see \code{\link[glmnet]{glmnet}}}

\item{y}{response \code{y} as in \code{glmnet}.}

\item{k}{the number of folds for k-fold cross-validation.}

\item{nrep}{the number of repetitions}

\item{opt.lambda.type}{Method for selecting optimum lambda. One of
\itemize{
\item{\code{"minimum"} - returns the lambda with best
CV score.}
\item{\code{"se"} - returns the +1 se lambda}
\item{\code{"percentage"} - returns minimum lambda
scaled by a factor, e.g. allowing lambda+3pc}
}}

\item{opt.lambda.type.value}{determines the se multiplier or percentage
for \code{opt.lambda.type}.}

\item{opt.ystratify}{Boolian.
Outer and inner sampling is stratified by outcome.
This is implemented with \code{\link[caret]{createFolds}}}

\item{opt.uniquefolds}{Boolian.
In most circumstances folds will be unique. This requests
that random folds are checked for uniqueness in inner and outer loops.
Currently it warns if non-unqiue values are found.}

\item{...}{arguments passed to \code{\link[glmnet]{cv.glmnet}}}
}
\value{
an object of class \code{\link{multialpha.repeated.cv.glmnet}}.
This is a 3 item list: \itemize{
\item{inner_results - merged \code{\link{repeated.cv.glmnet}} with
additional columns indicating \emph{alpha} and logical for \emph{best} overall.}
\item{inner_best - best selected row from inner_results}
\item{inner_folds - record of folds used}
}
}
\description{
Runs a \code{\link{repeated.cv.glmnet}} for a list of alpha values and
returns averaged results, selects the 'best' alpha.
\emph{This is intended to be a dCVnet internal function}
}
