% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_referencemodels.R
\name{refunreg}
\alias{refunreg}
\alias{refunreg.default}
\alias{refunreg.dCVnet}
\title{refunreg}
\usage{
refunreg(object, ...)

\method{refunreg}{default}(object, ...)

\method{refunreg}{dCVnet}(object, univariate = TRUE, doPCA = "auto", ncomp = "auto", ...)
}
\arguments{
\item{object}{an object to calculate reference logistic regressions for}

\item{...}{arguments to pass on}

\item{univariate}{boolean: also calculate per-variable
models?}

\item{doPCA}{first run PCA on the features can be "auto" or a boolean.
\itemize{
\item{\code{"auto"} determines based on ratio of
observations to predictors}
\item{\code{TRUE|FALSE} forces pca/no-pca.}
}}

\item{ncomp}{specify how many components for pca (integer).
\code{"auto"} (use n / 10)}
}
\value{
a list containing: \itemize{
\item{\code{glm} - the multiple-predictor model (possibly PCA-reduced)}
\item{\code{univariate} - an optional \code{glmlist} of models,
one for each predictor}
}
}
\description{
Unregularised prediction models for comparison
}
\details{
Calculate uncrossvalidated performance for reference unregularised
models to help interpret dCVnet performance.
given \eqn{n} observations of \eqn{p} predictors, the models calculated
are:
\itemize{
\item{a regression using all variables (if \eqn{n > 5 * p}),
otherwise one using the first \eqn{round(n / 5)}
principal components}
\item{a series of models, one for each column in the
design matrix - i.e. a mass-univariate approach}
}

Dev Note: the mass-univariate component has a class ('glmlist')
used in some summary functions, but this is not currently
fully implemented with methods etc.
}
\section{Methods (by class)}{
\itemize{
\item \code{refunreg(default)}: refunreg for \code{\link{dCVnet}} object

\item \code{refunreg(dCVnet)}: refunreg for \code{\link{dCVnet}} object

}}
\examples{
\dontrun{
data(QuickStartExample, package = "glmnet")
m <- dCVnet(y = QuickStartExample$y,
            data = QuickStartExample$x,
            family = "gaussian")
report_reference_performance_summary(refunreg(m))
}
}
