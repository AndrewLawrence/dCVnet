% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_utilities.R
\name{parse_dCVnet_input}
\alias{parse_dCVnet_input}
\title{parse_dCVnet_input}
\usage{
parse_dCVnet_input(f, data, family, positive = 1)
}
\arguments{
\item{f}{a two sided formula.
The LHS must be a single binary variable.
The RHS must refer to columns in \code{data}, but may include
interactions, transformations or expansions (like \code{\link{poly}}, or
\code{\link{log}}).
The formula \emph{must} include an intercept.}

\item{data}{a data.frame containing all terms in f.}

\item{positive}{What level of the outcome is a 'positive' result
(in the sense of a diagnostic test).
Can be a numeric indicating which of \code{levels(y)} to use
(i.e. 1 | 2). Alternatively a character specifying the exact level
(e.g. \code{"patient"}).}
}
\value{
\itemize{
\item{ \code{y} - outcome factor
with level ordered according to \code{positive}}
\item{ \code{x_mat} - predictor matrix
including expansions, interaction terms specified in \code{f}}
}
}
\description{
Collate a formula and dataset into a standardised object ready for dCVnet
}
\details{
The outcome is coerced to a binary factor which is releveled (if necessary)
such that the test=positive level comes first.
}
