% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dCVnet_utilities.R
\name{parse_dCVnet_input}
\alias{parse_dCVnet_input}
\title{parse_dCVnet_input}
\usage{
parse_dCVnet_input(
  data,
  y,
  family,
  f = "~.",
  offset = NULL,
  yname = "y",
  passNA = FALSE
)
}
\arguments{
\item{data}{a data.frame containing variables needed for the formula (f).}

\item{y}{the outcome (can be numeric vector,
a factor (for binomial / multinomial) or a matrix for cox/mgaussian)
For factors see Factor Outcomes section below.}

\item{family}{the model family (see \code{\link{glmnet}})}

\item{f}{a one sided formula.
The RHS must refer to columns in \code{data} and may include
interactions, transformations or expansions (like \code{\link{poly}}, or
\code{\link{log}}).
The formula \emph{must} include an intercept.}

\item{offset}{optional model offset (see \code{\link{glmnet}})}

\item{yname}{an optional label for the outcome / y variable.}

\item{passNA}{should NA values in data be excluded (FALSE)
or passed through (TRUE)?}
}
\value{
a list containing
\itemize{
\item{ \code{y} - outcome}
\item{ \code{x_mat} - predictor matrix
including expansions, interaction terms specified in \code{f}}
\item{ \code{yname} - a variable name for the y-variable }
\item{ \code{family} - the model family }
}
}
\description{
Collate an outcome (y) predictor matrix (x) into a standardised object ready
for dCVnet functions. Optionally x can be a dataframe and a
one-sided formula (f) can be provided to allow interactions,
transformations and expansions using R formula notation.
}
\section{Factor Outcomes}{

For categorical families (binomial, multinomial) input can be:
\itemize{
\item{numeric (integer): c(0,1,2)}
\item{factor: factor(1:3, labels = c("A", "B", "C")))}
\item{character: c("A", "B", "C")}
\item{other}
}
These are treated differently.

Numeric data is used as provided.
Character data will be coerced to a factor:
\code{factor(x, levels = sort(unique(x)))}.
Factor data will be used as provided, but \emph{must} have levels in
alphabetical order.

In all cases \emph{the reference category must be ordered first},
this means for the binomial family the 'positive' category is second.

Why alphabetical? Previously bugs arose due to different handling
of factor levels between functions called by dCVnet. These appear to be
resolved in the latest versions of the packages, but this restriction will
stay until I can verify.
}

\section{Notes}{

Sparse matrices are not supported by dCVnet.
}

